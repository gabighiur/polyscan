{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nimport CardComponent from \"@/components/CardComponent.vue\";\nimport vid from \"@/assets/logoanimation.mp4\";\nimport LogoNav from \"@/assets/logo2.png\";\nimport FLogo from \"@/assets/logoovo.png\";\nimport icon from \"@/assets/logo.png\";\nimport rage from \"@/assets/jaluzele/rageEmote.png\";\nimport coffeeImg from \"@/assets/jaluzele/cofee.png\";\nexport default {\n  name: \"App\",\n  components: {\n    NavBar,\n    CardComponent\n  },\n  data() {\n    return {\n      LogoNav: LogoNav,\n      FLogo: FLogo,\n      vid: vid,\n      icon: icon,\n      rage: rage,\n      coffeeImg: coffeeImg,\n      headerText: \"Hi!\\nI'm PolygonScan\\nScrapper Bot\",\n      coffee: \"Buy me a coffee and unlock RAGEMODE\",\n      section1Title: \"Discover the Exclusive Features\",\n      section1Text1: \"Effortlessly monitor the value of your Ethereum and Polygon tokens.\",\n      section1Text2: \"Set customized price alerts to stay informed.\",\n      section1Text3: \"Stay updated on the latest market trends.\",\n      section1Text4: \"Gwei Monitoring\",\n      section2Title: \"How to use my services?\",\n      section2Text1: \"Utilize the ps- prefix for commands. For example, try ps-help\",\n      section2Text2: \"Enjoy the PolygonScan Scrapper features and consider supporting it by voting.\",\n      botDescription: \"I can access blockchain data, monitor wallets, and receive real-time alerts. Upgrade for advanced features like exporting data and increased transaction limits.\"\n    };\n  },\n  mounted() {\n    // Scroll animations\n    const isMobile = window.innerWidth <= 768;\n    const threshold = isMobile ? 0.01 : 0.01;\n    const observer = new IntersectionObserver(this.handleScrollAnimations, {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: threshold\n    });\n    const section1 = this.$refs.section1;\n    const section2 = this.$refs.section2;\n    observer.observe(section1);\n    observer.observe(section2);\n\n    // Typewriter effect\n    const headerText = document.getElementById(\"typewriter\");\n    const text = headerText.textContent;\n    headerText.textContent = \"\";\n    let i = 0;\n    const typeSpeed = 100; // Speed of typewriter effect (in milliseconds)\n\n    const type = () => {\n      if (i < text.length) {\n        headerText.innerText += text.charAt(i);\n        i++;\n        setTimeout(type, typeSpeed);\n      }\n    };\n    type();\n  },\n  methods: {\n    scrollToTop() {\n      window.scrollTo({\n        top: 0,\n        behavior: \"smooth\"\n      });\n    },\n    handleScrollAnimations(entries) {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"visible\");\n        } else {\n          entry.target.classList.remove(\"visible\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavBar","CardComponent","vid","LogoNav","FLogo","icon","rage","coffeeImg","name","components","data","headerText","coffee","section1Title","section1Text1","section1Text2","section1Text3","section1Text4","section2Title","section2Text1","section2Text2","botDescription","mounted","isMobile","window","innerWidth","threshold","observer","IntersectionObserver","handleScrollAnimations","root","rootMargin","section1","$refs","section2","observe","document","getElementById","text","textContent","i","typeSpeed","type","length","innerText","charAt","setTimeout","methods","scrollToTop","scrollTo","top","behavior","entries","forEach","entry","isIntersecting","target","classList","add","remove"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\PolygonScanner.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n        <NavBar />\r\n\r\n        <header>\r\n            <div class=\"video-container\">\r\n                <video class=\"header-video\" :src=\"vid\" autoplay loop muted></video>\r\n            </div>\r\n            <div class=\"header-text\">\r\n                <span id=\"typewriter\">{{ headerText }}</span>\r\n            </div>\r\n\r\n            <section class=\"bot-description\">\r\n                <div class=\"container\">\r\n                    <h1>What Can I Do?</h1>\r\n                    <p>{{ botDescription }}</p>\r\n                </div>\r\n            </section>\r\n        </header>\r\n\r\n        <div class=\"header-content\">\r\n            <div class=\"info-container\">\r\n                <img :src=\"rage\" alt=\"rage\" />\r\n                <h2>{{ coffee }}</h2>\r\n            </div>\r\n            <div class=\"hero-container\">\r\n                <a href=\"https://www.buymeacoffee.com/bezmir/membership\"\r\n                   target=\"_blank\"\r\n                   rel=\"noopener noreferrer\">\r\n                    <button class=\"invite-button\">\r\n                        <img class=\"coffee\" :src=\"coffeeImg\" alt=\"Coffee Icon\" />\r\n                    </button>\r\n                </a>\r\n            </div>\r\n        </div>\r\n\r\n        <section class=\"hidden\" ref=\"section1\">\r\n            <div class=\"container\">\r\n                <h1>{{ section1Title }}</h1>\r\n                <div>\r\n                    <div class=\"custom-list-item\">\r\n                        <img class=\"list-icon\" :src=\"icon\" alt=\"Logo\" />\r\n                        <p>{{ section1Text1 }}</p>\r\n                    </div>\r\n                    <div class=\"custom-list-item\">\r\n                        <img class=\"list-icon\" :src=\"icon\" alt=\"Logo\" />\r\n                        <p>{{ section1Text2 }}</p>\r\n                    </div>\r\n                    <div class=\"custom-list-item\">\r\n                        <img class=\"list-icon\" :src=\"icon\" alt=\"Logo\" />\r\n                        <p>{{ section1Text3 }}</p>\r\n                    </div>\r\n                    <div class=\"custom-list-item\">\r\n                        <img class=\"list-icon\" :src=\"icon\" alt=\"Logo\" />\r\n                        <p>{{ section1Text4 }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section class=\"hidden\" ref=\"section2\">\r\n            <div class=\"container\">\r\n                <h1>{{ section2Title }}</h1>\r\n                <div>\r\n                    <div class=\"custom-list-item\">\r\n                        <img class=\"list-icon\" :src=\"icon\" alt=\"Logo\" />\r\n                        <p>\r\n                            <a href=\"https://discord.com/api/oauth2/authorize?client_id=1041454438595965049&permissions=2147534848&scope=bot%20applications.commands\"\r\n                               target=\"_blank\"\r\n                               rel=\"noopener noreferrer\">\r\n                                Invite\r\n                            </a>\r\n                            me to your Discord server and unlock a world of possibilities.\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"custom-list-item\">\r\n                        <img class=\"list-icon\" :src=\"icon\" alt=\"Logo\" />\r\n                        <p>{{ section2Text1 }}</p>\r\n                    </div>\r\n                    <div class=\"custom-list-item\">\r\n                        <img class=\"list-icon\" :src=\"icon\" alt=\"Logo\" />\r\n                        <p>{{ section2Text2 }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <CardComponent />\r\n\r\n        <footer class=\"footer\">\r\n            <div class=\"footer-content\">\r\n                <img class=\"footer-logo\" :src=\"FLogo\" alt=\"Logo\" />\r\n                <p>Powered By <a href=\"https://ovoono.studio/\" target=\"_blank\">OvoOno Studio</a></p>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import NavBar from \"@/components/NavBar.vue\";\r\n    import CardComponent from \"@/components/CardComponent.vue\";\r\n    import vid from \"@/assets/logoanimation.mp4\";\r\n    import LogoNav from \"@/assets/logo2.png\";\r\n    import FLogo from \"@/assets/logoovo.png\";\r\n    import icon from \"@/assets/logo.png\";\r\n    import rage from \"@/assets/jaluzele/rageEmote.png\";\r\n    import coffeeImg from \"@/assets/jaluzele/cofee.png\";\r\n\r\n    export default {\r\n        name: \"App\",\r\n        components: {\r\n            NavBar,\r\n            CardComponent,\r\n        },\r\n        data() {\r\n            return {\r\n                LogoNav: LogoNav,\r\n                FLogo: FLogo,\r\n                vid: vid,\r\n                icon: icon,\r\n                rage: rage,\r\n                coffeeImg: coffeeImg,\r\n                headerText: \"Hi!\\nI'm PolygonScan\\nScrapper Bot\",\r\n                coffee: \"Buy me a coffee and unlock RAGEMODE\",\r\n                section1Title: \"Discover the Exclusive Features\",\r\n                section1Text1: \"Effortlessly monitor the value of your Ethereum and Polygon tokens.\",\r\n                section1Text2: \"Set customized price alerts to stay informed.\",\r\n                section1Text3: \"Stay updated on the latest market trends.\",\r\n                section1Text4: \"Gwei Monitoring\",\r\n                section2Title: \"How to use my services?\",\r\n                section2Text1: \"Utilize the ps- prefix for commands. For example, try ps-help\",\r\n                section2Text2: \"Enjoy the PolygonScan Scrapper features and consider supporting it by voting.\",\r\n                botDescription:\r\n                    \"I can access blockchain data, monitor wallets, and receive real-time alerts. Upgrade for advanced features like exporting data and increased transaction limits.\",\r\n            };\r\n        },\r\n        mounted() {\r\n            // Scroll animations\r\n            const isMobile = window.innerWidth <= 768;\r\n            const threshold = isMobile ? 0.01 : 0.01;\r\n\r\n            const observer = new IntersectionObserver(this.handleScrollAnimations, {\r\n                root: null,\r\n                rootMargin: \"0px\",\r\n                threshold: threshold,\r\n            });\r\n\r\n            const section1 = this.$refs.section1;\r\n            const section2 = this.$refs.section2;\r\n\r\n            observer.observe(section1);\r\n            observer.observe(section2);\r\n\r\n            // Typewriter effect\r\n            const headerText = document.getElementById(\"typewriter\");\r\n            const text = headerText.textContent;\r\n            headerText.textContent = \"\";\r\n\r\n            let i = 0;\r\n            const typeSpeed = 100; // Speed of typewriter effect (in milliseconds)\r\n\r\n            const type = () => {\r\n                if (i < text.length) {\r\n                    headerText.innerText += text.charAt(i);\r\n                    i++;\r\n                    setTimeout(type, typeSpeed);\r\n                }\r\n            };\r\n\r\n            type();\r\n        },\r\n        methods: {\r\n            scrollToTop() {\r\n                window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n            },\r\n            handleScrollAnimations(entries) {\r\n                entries.forEach((entry) => {\r\n                    if (entry.isIntersecting) {\r\n                        entry.target.classList.add(\"visible\");\r\n                    } else {\r\n                        entry.target.classList.remove(\"visible\");\r\n                    }\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    @import '../assets/styles.css';\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}