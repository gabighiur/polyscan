{"ast":null,"code":"export default {\n  name: 'App',\n  methods: {\n    toggleMenu() {\n      // Implement the logic to toggle the mobile menu here\n    }\n  }\n};","map":{"version":3,"names":["name","methods","toggleMenu"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\PolygonScanner.vue"],"sourcesContent":["<template>\r\n  <div class=\"app\">\r\n    <nav class=\"navbar\">\r\n      <div class=\"navbar-content\">\r\n        <img class=\"logo\" src=\"../assets/logo2.png\" alt=\"Logo\" />\r\n        <button class=\"invite-button\">Invite</button>\r\n      </div>\r\n      <button class=\"hamburger\" @click=\"toggleMenu\">\r\n        <span class=\"hamburger-line\"></span>\r\n        <span class=\"hamburger-line\"></span>\r\n        <span class=\"hamburger-line\"></span>\r\n      </button>\r\n    </nav>\r\n    <video class=\"header-video\" src=\"../assets/hi1.mp4\" autoplay loop muted></video>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n  methods: {\r\n    toggleMenu() {\r\n      // Implement the logic to toggle the mobile menu here\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.app {\r\n  background: #27082B;\r\n  color: #67c4a5;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n    .navbar {\r\n        width: 100%;\r\n        background-color: transparent;\r\n        color: #fff;\r\n        padding: 0.2rem;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n        position: fixed; /* Add this line */\r\n        top: 0; /* Add this line */\r\n        z-index: 1; /* Add this line */\r\n    }\r\n\r\n/* ... rest of the CSS code ... */\r\n\r\n    .header-video {\r\n        width: 100%;\r\n        height: 100vh; /* Adjust the height as desired */\r\n        object-fit: cover; /* Add this line */\r\n    }\r\n\r\n/* ... rest of the CSS code ... */\r\n\r\n</style>\r\n"],"mappings":"AAkBA,eAAe;EACbA,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}