{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"stage\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"container\\\"><div class=\\\"ring\\\"><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div><div class=\\\"img\\\"></div></div></div>\", 1);\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_3);\n}","map":{"version":3,"names":["class","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\SliderComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"stage\">\r\n        <div class=\"container\">\r\n            <div class=\"ring\">\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import gsap from 'gsap';\r\n    import $ from 'jquery';\r\n\r\n    export default {\r\n        mounted() {\r\n            \r\n\r\n            gsap.timeline()\r\n                .set('.ring', { rotationY: 180, cursor: 'grab' })\r\n                .set('.img', {\r\n                    rotateY: (i) => i * -36,\r\n                    transformOrigin: '50% 50% 500px',\r\n                    z: -500,\r\n                    backgroundImage: (i) => `url(https://picsum.photos/id/${i + 32}/600/400/)`,\r\n                    backgroundPosition: (i) => this.getBgPos(i),\r\n                    backfaceVisibility: 'hidden',\r\n                })\r\n                .from('.img', {\r\n                    duration: 1.5,\r\n                    y: 200,\r\n                    opacity: 0,\r\n                    stagger: 0.1,\r\n                    ease: 'expo',\r\n                })\r\n                .add(() => {\r\n                    $('.img').on('mouseenter', (e) => {\r\n                        let current = e.currentTarget;\r\n                        gsap.to('.img', { opacity: (i, t) => (t == current) ? 1 : 0.5, ease: 'power3' });\r\n                    });\r\n                    $('.img').on('mouseleave', () => {\r\n                        gsap.to('.img', { opacity: 1, ease: 'power2.inOut' });\r\n                    });\r\n                }, '-=0.5');\r\n\r\n            $(window).on('mousedown touchstart', this.dragStart);\r\n            $(window).on('mouseup touchend', this.dragEnd);\r\n        },\r\n        methods: {\r\n            dragStart(e) {\r\n                if (e.touches) e.clientX = e.touches[0].clientX;\r\n                this.xPos = Math.round(e.clientX);\r\n                gsap.set('.ring', { cursor: 'grabbing' });\r\n                $(window).on('mousemove touchmove', this.drag);\r\n            },\r\n            drag(e) {\r\n                if (e.touches) e.clientX = e.touches[0].clientX;\r\n\r\n                gsap.to('.ring', {\r\n                    rotationY: `-=${(Math.round(e.clientX) - this.xPos) % 360}`,\r\n                    onUpdate: () => { gsap.set('.img', { backgroundPosition: (i) => this.getBgPos(i) }); },\r\n                });\r\n\r\n                this.xPos = Math.round(e.clientX);\r\n            },\r\n            dragEnd() {\r\n                $(window).off('mousemove touchmove', this.drag);\r\n                gsap.set('.ring', { cursor: 'grab' });\r\n            },\r\n            getBgPos(i) {\r\n                return `${(100 - gsap.utils.wrap(0, 360, gsap.getProperty('.ring', 'rotationY') - 180 - i * 36) / 360 * 500)}px 0px`;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style>\r\n    html, body, .stage, .ring, .img {\r\n        width: 100%;\r\n        height: 100%;\r\n        transform-style: preserve-3d;\r\n        user-select: none;\r\n    }\r\n\r\n    html, body, .stage {\r\n        overflow: hidden;\r\n        background: #000;\r\n    }\r\n\r\n    div, svg {\r\n        position: absolute;\r\n    }\r\n\r\n    .container {\r\n        perspective: 2000px;\r\n        width: 300px;\r\n        height: 400px;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n</style>\r\n"],"mappings":";;EACSA,KAAK,EAAC;AAAO;;oBACdC,UAaM,C;;uBAdVC,mBAAA,CAeM,OAfNC,UAeM,EAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}