{"ast":null,"code":"import gsap from 'gsap';\nimport $ from 'jquery';\nexport default {\n  data() {\n    return {\n      videoSrc: 'your-video-url.mp4' // Replace with your video URL\n    };\n  },\n\n  mounted() {\n    const videoElement = this.$refs.video;\n    gsap.timeline().set('.ring', {\n      rotationY: 180,\n      cursor: 'grab'\n    }).set('.video', {\n      rotateY: i => i * -36,\n      transformOrigin: '50% 50% 500px',\n      z: -500,\n      backfaceVisibility: 'hidden'\n    }).from('.video', {\n      duration: 1.5,\n      y: 200,\n      opacity: 0,\n      stagger: 0.1,\n      ease: 'expo',\n      onComplete: () => {\n        videoElement.play();\n      }\n    }).add(() => {\n      $('.video').on('mouseenter', e => {\n        let current = e.currentTarget;\n        gsap.to('.video', {\n          opacity: (i, t) => t == current ? 1 : 0.5,\n          ease: 'power3'\n        });\n      });\n      $('.video').on('mouseleave', () => {\n        gsap.to('.video', {\n          opacity: 1,\n          ease: 'power2.inOut'\n        });\n      });\n    }, '-=0.5');\n    $(window).on('mousedown touchstart', this.dragStart);\n    $(window).on('mouseup touchend', this.dragEnd);\n  },\n  methods: {\n    dragStart(e) {\n      if (e.touches) e.clientX = e.touches[0].clientX;\n      this.xPos = Math.round(e.clientX);\n      gsap.set('.ring', {\n        cursor: 'grabbing'\n      });\n      $(window).on('mousemove touchmove', this.drag);\n    },\n    drag(e) {\n      if (e.touches) e.clientX = e.touches[0].clientX;\n      gsap.to('.ring', {\n        rotationY: `-=${(Math.round(e.clientX) - this.xPos) % 360}`,\n        onUpdate: () => {\n          gsap.set('.video', {\n            backgroundPosition: i => this.getBgPos(i)\n          });\n        }\n      });\n      this.xPos = Math.round(e.clientX);\n    },\n    dragEnd() {\n      $(window).off('mousemove touchmove', this.drag);\n      gsap.set('.ring', {\n        cursor: 'grab'\n      });\n    },\n    getBgPos(i) {\n      return `${100 - gsap.utils.wrap(0, 360, gsap.getProperty('.ring', 'rotationY') - 180 - i * 36) / 360 * 500}px 0px`;\n    }\n  }\n};","map":{"version":3,"names":["gsap","$","data","videoSrc","mounted","videoElement","$refs","video","timeline","set","rotationY","cursor","rotateY","i","transformOrigin","z","backfaceVisibility","from","duration","y","opacity","stagger","ease","onComplete","play","add","on","e","current","currentTarget","to","t","window","dragStart","dragEnd","methods","touches","clientX","xPos","Math","round","drag","onUpdate","backgroundPosition","getBgPos","off","utils","wrap","getProperty"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\SliderComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"stage\">\r\n        <div class=\"container\">\r\n            <div class=\"ring\">\r\n                <div class=\"video\">\r\n                    <video ref=\"video\" class=\"video-element\" loop muted>\r\n                        <source :src=\"videoSrc\" type=\"video/mp4\">\r\n                    </video>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import gsap from 'gsap';\r\n    import $ from 'jquery';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                videoSrc: 'your-video-url.mp4' // Replace with your video URL\r\n            };\r\n        },\r\n        mounted() {\r\n            const videoElement = this.$refs.video;\r\n\r\n            gsap.timeline()\r\n                .set('.ring', { rotationY: 180, cursor: 'grab' })\r\n                .set('.video', {\r\n                    rotateY: (i) => i * -36,\r\n                    transformOrigin: '50% 50% 500px',\r\n                    z: -500,\r\n                    backfaceVisibility: 'hidden',\r\n                })\r\n                .from('.video', {\r\n                    duration: 1.5,\r\n                    y: 200,\r\n                    opacity: 0,\r\n                    stagger: 0.1,\r\n                    ease: 'expo',\r\n                    onComplete: () => {\r\n                        videoElement.play();\r\n                    }\r\n                })\r\n                .add(() => {\r\n                    $('.video').on('mouseenter', (e) => {\r\n                        let current = e.currentTarget;\r\n                        gsap.to('.video', { opacity: (i, t) => (t == current) ? 1 : 0.5, ease: 'power3' });\r\n                    });\r\n                    $('.video').on('mouseleave', () => {\r\n                        gsap.to('.video', { opacity: 1, ease: 'power2.inOut' });\r\n                    });\r\n                }, '-=0.5');\r\n\r\n            $(window).on('mousedown touchstart', this.dragStart);\r\n            $(window).on('mouseup touchend', this.dragEnd);\r\n        },\r\n        methods: {\r\n            dragStart(e) {\r\n                if (e.touches) e.clientX = e.touches[0].clientX;\r\n                this.xPos = Math.round(e.clientX);\r\n                gsap.set('.ring', { cursor: 'grabbing' });\r\n                $(window).on('mousemove touchmove', this.drag);\r\n            },\r\n            drag(e) {\r\n                if (e.touches) e.clientX = e.touches[0].clientX;\r\n\r\n                gsap.to('.ring', {\r\n                    rotationY: `-=${(Math.round(e.clientX) - this.xPos) % 360}`,\r\n                    onUpdate: () => { gsap.set('.video', { backgroundPosition: (i) => this.getBgPos(i) }); },\r\n                });\r\n\r\n                this.xPos = Math.round(e.clientX);\r\n            },\r\n            dragEnd() {\r\n                $(window).off('mousemove touchmove', this.drag);\r\n                gsap.set('.ring', { cursor: 'grab' });\r\n            },\r\n            getBgPos(i) {\r\n                return `${(100 - gsap.utils.wrap(0, 360, gsap.getProperty('.ring', 'rotationY') - 180 - i * 36) / 360 * 500)}px 0px`;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .stage {\r\n        width: 100%;\r\n        height: 100%;\r\n        transform-style: preserve-3d;\r\n        user-select: none;\r\n    }\r\n\r\n    .container {\r\n        perspective: 2000px;\r\n        width: 300px;\r\n        height: 400px;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    .ring {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .video {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        transform-style: preserve-3d;\r\n        backface-visibility: hidden;\r\n    }\r\n\r\n        .video .video-element {\r\n            width: 50%;\r\n            height: 50%;\r\n        }\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}