{"ast":null,"code":"let xPos = 0;\ngsap.timeline().set('.ring', {\n  rotationY: 180,\n  cursor: 'grab'\n}) //set initial rotationY so the parallax jump happens off screen\n.set('.img', {\n  // apply transform rotations to each image\n  rotateY: i => i * -36,\n  transformOrigin: '50% 50% 500px',\n  z: -500,\n  backgroundImage: i => 'url(https://picsum.photos/id/' + (i + 32) + '/600/400/)',\n  backgroundPosition: i => getBgPos(i),\n  backfaceVisibility: 'hidden'\n}).from('.img', {\n  duration: 1.5,\n  y: 200,\n  opacity: 0,\n  stagger: 0.1,\n  ease: 'expo'\n}).add(() => {\n  $('.img').on('mouseenter', e => {\n    let current = e.currentTarget;\n    gsap.to('.img', {\n      opacity: (i, t) => t == current ? 1 : 0.5,\n      ease: 'power3'\n    });\n  });\n  $('.img').on('mouseleave', e => {\n    gsap.to('.img', {\n      opacity: 1,\n      ease: 'power2.inOut'\n    });\n  });\n}, '-=0.5');\n$(window).on('mousedown touchstart', dragStart);\n$(window).on('mouseup touchend', dragEnd);\nfunction dragStart(e) {\n  if (e.touches) e.clientX = e.touches[0].clientX;\n  xPos = Math.round(e.clientX);\n  gsap.set('.ring', {\n    cursor: 'grabbing'\n  });\n  $(window).on('mousemove touchmove', drag);\n}\nfunction drag(e) {\n  if (e.touches) e.clientX = e.touches[0].clientX;\n  gsap.to('.ring', {\n    rotationY: '-=' + (Math.round(e.clientX) - xPos) % 360,\n    onUpdate: () => {\n      gsap.set('.img', {\n        backgroundPosition: i => getBgPos(i)\n      });\n    }\n  });\n  xPos = Math.round(e.clientX);\n}\nfunction dragEnd(e) {\n  $(window).off('mousemove touchmove', drag);\n  gsap.set('.ring', {\n    cursor: 'grab'\n  });\n}\nfunction getBgPos(i) {\n  //returns the background-position string to create parallax movement in each image\n  return 100 - gsap.utils.wrap(0, 360, gsap.getProperty('.ring', 'rotationY') - 180 - i * 36) / 360 * 500 + 'px 0px';\n}","map":{"version":3,"names":["xPos","gsap","timeline","set","rotationY","cursor","rotateY","i","transformOrigin","z","backgroundImage","backgroundPosition","getBgPos","backfaceVisibility","from","duration","y","opacity","stagger","ease","add","$","on","e","current","currentTarget","to","t","window","dragStart","dragEnd","touches","clientX","Math","round","drag","onUpdate","off","utils","wrap","getProperty"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\SliderComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"stage\">\r\n\r\n\r\n        <div class=\"container\">\r\n            <div class=\"ring\">\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n                <div class=\"img\"></div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    let xPos = 0;\r\n\r\n    gsap.timeline()\r\n        .set('.ring', { rotationY: 180, cursor: 'grab' }) //set initial rotationY so the parallax jump happens off screen\r\n        .set('.img', { // apply transform rotations to each image\r\n            rotateY: (i) => i * -36,\r\n            transformOrigin: '50% 50% 500px',\r\n            z: -500,\r\n            backgroundImage: (i) => 'url(https://picsum.photos/id/' + (i + 32) + '/600/400/)',\r\n            backgroundPosition: (i) => getBgPos(i),\r\n            backfaceVisibility: 'hidden'\r\n        })\r\n        .from('.img', {\r\n            duration: 1.5,\r\n            y: 200,\r\n            opacity: 0,\r\n            stagger: 0.1,\r\n            ease: 'expo'\r\n        })\r\n        .add(() => {\r\n            $('.img').on('mouseenter', (e) => {\r\n                let current = e.currentTarget;\r\n                gsap.to('.img', { opacity: (i, t) => (t == current) ? 1 : 0.5, ease: 'power3' })\r\n            })\r\n            $('.img').on('mouseleave', (e) => {\r\n                gsap.to('.img', { opacity: 1, ease: 'power2.inOut' })\r\n            })\r\n        }, '-=0.5')\r\n\r\n    $(window).on('mousedown touchstart', dragStart);\r\n    $(window).on('mouseup touchend', dragEnd);\r\n\r\n\r\n    function dragStart(e) {\r\n        if (e.touches) e.clientX = e.touches[0].clientX;\r\n        xPos = Math.round(e.clientX);\r\n        gsap.set('.ring', { cursor: 'grabbing' })\r\n        $(window).on('mousemove touchmove', drag);\r\n    }\r\n\r\n\r\n    function drag(e) {\r\n        if (e.touches) e.clientX = e.touches[0].clientX;\r\n\r\n        gsap.to('.ring', {\r\n            rotationY: '-=' + ((Math.round(e.clientX) - xPos) % 360),\r\n            onUpdate: () => { gsap.set('.img', { backgroundPosition: (i) => getBgPos(i) }) }\r\n        });\r\n\r\n        xPos = Math.round(e.clientX);\r\n    }\r\n\r\n\r\n    function dragEnd(e) {\r\n        $(window).off('mousemove touchmove', drag);\r\n        gsap.set('.ring', { cursor: 'grab' });\r\n    }\r\n\r\n\r\n    function getBgPos(i) { //returns the background-position string to create parallax movement in each image\r\n        return (100 - gsap.utils.wrap(0, 360, gsap.getProperty('.ring', 'rotationY') - 180 - i * 36) / 360 * 500) + 'px 0px';\r\n    }\r\n\r\n</script>\r\n\r\n<style>\r\n    html, body, .stage, .ring, .img {\r\n        width: 100%;\r\n        height: 100%;\r\n        transform-style: preserve-3d;\r\n        user-select: none;\r\n    }\r\n\r\n    html, body, .stage {\r\n        overflow: hidden;\r\n        background: #000;\r\n    }\r\n\r\n    div, svg {\r\n        position: absolute;\r\n    }\r\n\r\n    .container {\r\n        perspective: 2000px;\r\n        width: 300px;\r\n        height: 400px;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%,-50%);\r\n    }\r\n</style>"],"mappings":"AAwBI,IAAIA,IAAG,GAAI,CAAC;AAEZC,IAAI,CAACC,QAAQ,CAAC,EACTC,GAAG,CAAC,OAAO,EAAE;EAAEC,SAAS,EAAE,GAAG;EAAEC,MAAM,EAAE;AAAO,CAAC,EAAE;AAAA,CACjDF,GAAG,CAAC,MAAM,EAAE;EAAE;EACXG,OAAO,EAAGC,CAAC,IAAKA,CAAA,GAAI,CAAC,EAAE;EACvBC,eAAe,EAAE,eAAe;EAChCC,CAAC,EAAE,CAAC,GAAG;EACPC,eAAe,EAAGH,CAAC,IAAK,+BAA8B,IAAKA,CAAA,GAAI,EAAE,IAAI,YAAY;EACjFI,kBAAkB,EAAGJ,CAAC,IAAKK,QAAQ,CAACL,CAAC,CAAC;EACtCM,kBAAkB,EAAE;AACxB,CAAC,EACAC,IAAI,CAAC,MAAM,EAAE;EACVC,QAAQ,EAAE,GAAG;EACbC,CAAC,EAAE,GAAG;EACNC,OAAO,EAAE,CAAC;EACVC,OAAO,EAAE,GAAG;EACZC,IAAI,EAAE;AACV,CAAC,EACAC,GAAG,CAAC,MAAM;EACPC,CAAC,CAAC,MAAM,CAAC,CAACC,EAAE,CAAC,YAAY,EAAGC,CAAC,IAAK;IAC9B,IAAIC,OAAM,GAAID,CAAC,CAACE,aAAa;IAC7BxB,IAAI,CAACyB,EAAE,CAAC,MAAM,EAAE;MAAET,OAAO,EAAEA,CAACV,CAAC,EAAEoB,CAAC,KAAMA,CAAA,IAAKH,OAAO,GAAI,IAAI,GAAG;MAAEL,IAAI,EAAE;IAAS,CAAC;EACnF,CAAC;EACDE,CAAC,CAAC,MAAM,CAAC,CAACC,EAAE,CAAC,YAAY,EAAGC,CAAC,IAAK;IAC9BtB,IAAI,CAACyB,EAAE,CAAC,MAAM,EAAE;MAAET,OAAO,EAAE,CAAC;MAAEE,IAAI,EAAE;IAAe,CAAC;EACxD,CAAC;AACL,CAAC,EAAE,OAAO;AAEdE,CAAC,CAACO,MAAM,CAAC,CAACN,EAAE,CAAC,sBAAsB,EAAEO,SAAS,CAAC;AAC/CR,CAAC,CAACO,MAAM,CAAC,CAACN,EAAE,CAAC,kBAAkB,EAAEQ,OAAO,CAAC;AAGzC,SAASD,SAASA,CAACN,CAAC,EAAE;EAClB,IAAIA,CAAC,CAACQ,OAAO,EAAER,CAAC,CAACS,OAAM,GAAIT,CAAC,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;EAC/ChC,IAAG,GAAIiC,IAAI,CAACC,KAAK,CAACX,CAAC,CAACS,OAAO,CAAC;EAC5B/B,IAAI,CAACE,GAAG,CAAC,OAAO,EAAE;IAAEE,MAAM,EAAE;EAAW,CAAC;EACxCgB,CAAC,CAACO,MAAM,CAAC,CAACN,EAAE,CAAC,qBAAqB,EAAEa,IAAI,CAAC;AAC7C;AAGA,SAASA,IAAIA,CAACZ,CAAC,EAAE;EACb,IAAIA,CAAC,CAACQ,OAAO,EAAER,CAAC,CAACS,OAAM,GAAIT,CAAC,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO;EAE/C/B,IAAI,CAACyB,EAAE,CAAC,OAAO,EAAE;IACbtB,SAAS,EAAE,IAAG,GAAK,CAAC6B,IAAI,CAACC,KAAK,CAACX,CAAC,CAACS,OAAO,IAAIhC,IAAI,IAAI,GAAI;IACxDoC,QAAQ,EAAEA,CAAA,KAAM;MAAEnC,IAAI,CAACE,GAAG,CAAC,MAAM,EAAE;QAAEQ,kBAAkB,EAAGJ,CAAC,IAAKK,QAAQ,CAACL,CAAC;MAAE,CAAC;IAAE;EACnF,CAAC,CAAC;EAEFP,IAAG,GAAIiC,IAAI,CAACC,KAAK,CAACX,CAAC,CAACS,OAAO,CAAC;AAChC;AAGA,SAASF,OAAOA,CAACP,CAAC,EAAE;EAChBF,CAAC,CAACO,MAAM,CAAC,CAACS,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAAC;EAC1ClC,IAAI,CAACE,GAAG,CAAC,OAAO,EAAE;IAAEE,MAAM,EAAE;EAAO,CAAC,CAAC;AACzC;AAGA,SAASO,QAAQA,CAACL,CAAC,EAAE;EAAE;EACnB,OAAQ,GAAE,GAAIN,IAAI,CAACqC,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE,GAAG,EAAEtC,IAAI,CAACuC,WAAW,CAAC,OAAO,EAAE,WAAW,IAAI,GAAE,GAAIjC,CAAA,GAAI,EAAE,IAAI,GAAE,GAAI,GAAG,GAAI,QAAQ;AACxH"},"metadata":{},"sourceType":"script","externalDependencies":[]}