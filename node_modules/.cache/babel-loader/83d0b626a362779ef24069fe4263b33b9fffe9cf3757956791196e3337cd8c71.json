{"ast":null,"code":"import Image1 from '@/assets/tokenUpdate.png';\nimport Image2 from '@/assets/priceAlert.png';\nexport default {\n  name: 'App',\n  data() {\n    return {\n      section1Title: 'What can I offer?',\n      section1Text1: 'Effortlessly monitor the value of your Ethereum and Polygon tokens.',\n      section1Image1: Image1,\n      section1Text2: 'Set customized price alerts to stay informed.',\n      section1Image2: Image2,\n      section1Text3: 'Stay updated on the latest market trends.',\n      section2Title: 'How to use my services?',\n      section2Text1: 'Utilize the ps- prefix for commands. For example, try ps-help',\n      section2Text2: 'Enjoy the PolyganScan Scrapper features and consider supporting it by voting.'\n    };\n  },\n  methods: {\n    toggleMenu() {\n      // Implement the logic to toggle the mobile menu here\n    },\n    handleScrollAnimations(entries) {\n      entries.forEach(entry => {\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          entry.target.classList.add('visible');\n        } else {\n          entry.target.classList.remove('visible');\n        }\n      });\n    }\n  },\n  mounted() {\n    const observer = new IntersectionObserver(this.handleScrollAnimations, {\n      root: null,\n      rootMargin: '0px',\n      threshold: 0.3 // Adjust this threshold as needed\n    });\n\n    const section1 = this.$refs.section1;\n    const section2 = this.$refs.section2;\n    observer.observe(section1);\n    observer.observe(section2);\n\n    // Add touch event listeners\n    section1.addEventListener('touchstart', () => {\n      section1.classList.add('visible');\n    });\n    section2.addEventListener('touchstart', () => {\n      section2.classList.add('visible');\n    });\n  }\n};","map":{"version":3,"names":["Image1","Image2","name","data","section1Title","section1Text1","section1Image1","section1Text2","section1Image2","section1Text3","section2Title","section2Text1","section2Text2","methods","toggleMenu","handleScrollAnimations","entries","forEach","entry","isIntersecting","intersectionRatio","target","classList","add","remove","mounted","observer","IntersectionObserver","root","rootMargin","threshold","section1","$refs","section2","observe","addEventListener"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\PolygonScanner.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n        <nav class=\"navbar\">\r\n            <div class=\"navbar-content\">\r\n                <img class=\"logo\" src=\"../assets/logo2.png\" alt=\"Logo\" />\r\n                <a href=\"https://discord.com/api/oauth2/authorize?client_id=1041454438595965049&permissions=2147534848&scope=bot%20applications.commands\"\r\n                   target=\"_blank\"\r\n                   rel=\"noopener noreferrer\">\r\n                    <button class=\"invite-button\">Invite me</button>\r\n                </a>\r\n            </div>\r\n            <button class=\"hamburger\" @click=\"toggleMenu\">\r\n                <span class=\"hamburger-line\"></span>\r\n                <span class=\"hamburger-line\"></span>\r\n                <span class=\"hamburger-line\"></span>\r\n            </button>\r\n        </nav>\r\n        <div class=\"header\">\r\n            <video class=\"header-video\" src=\"../assets/hi1.mp4\" autoplay loop muted></video>\r\n        </div>\r\n\r\n        <section class=\"hidden\" ref=\"section1\">\r\n            <div class=\"container\">\r\n                <h1>{{ section1Title }}</h1>\r\n                <ul>\r\n                    <li>\r\n                        <p>{{ section1Text1 }}</p>\r\n                        <img class=\"image\" :src=\"section1Image1\" alt=\"Token Update\" />\r\n                    </li>\r\n                    <li>\r\n                        <p>{{ section1Text2 }}</p>\r\n                        <img class=\"image\" :src=\"section1Image2\" alt=\"Price Alert\" />\r\n                    </li>\r\n                    <li>\r\n                        <p>{{ section1Text3 }}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </section>\r\n\r\n        <section class=\"hidden\" ref=\"section2\">\r\n            <div class=\"container\">\r\n                <h1>{{ section2Title }}</h1>\r\n                <ul>\r\n                    <li>\r\n                        <p>\r\n                            <a href=\"https://discord.com/api/oauth2/authorize?client_id=1041454438595965049&permissions=2147534848&scope=bot%20applications.commands\"\r\n                               target=\"_blank\"\r\n                               rel=\"noopener noreferrer\">\r\n                                <button class=\"invite-button\">Invite me</button>\r\n                            </a>\r\n                            to your Discord server and unlock a world of possibilities.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <p>{{ section2Text1 }}</p>\r\n                    </li>\r\n                    <li>\r\n                        <p>{{ section2Text2 }}</p>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </section>\r\n\r\n        <footer class=\"footer\">\r\n            <div class=\"footer-content\">\r\n                <img class=\"footer-logo\" src=\"../assets/logoovo.png\" alt=\"Logo\" />\r\n                <p>Powered By <a href=\"https://ovoono.studio/\" target=\"_blank\" rel=\"noopener noreferrer\">OvoOno Studio</a></p>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Image1 from '@/assets/tokenUpdate.png';\r\nimport Image2 from '@/assets/priceAlert.png';\r\n\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      section1Title: 'What can I offer?',\r\n      section1Text1: 'Effortlessly monitor the value of your Ethereum and Polygon tokens.',\r\n      section1Image1: Image1,\r\n      section1Text2: 'Set customized price alerts to stay informed.',\r\n      section1Image2: Image2,\r\n      section1Text3: 'Stay updated on the latest market trends.',\r\n      section2Title: 'How to use my services?',\r\n      section2Text1: 'Utilize the ps- prefix for commands. For example, try ps-help',\r\n      section2Text2: 'Enjoy the PolyganScan Scrapper features and consider supporting it by voting.',\r\n    };\r\n  },\r\n  methods: {\r\n    toggleMenu() {\r\n      // Implement the logic to toggle the mobile menu here\r\n    },\r\n    handleScrollAnimations(entries) {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\r\n          entry.target.classList.add('visible');\r\n        } else {\r\n          entry.target.classList.remove('visible');\r\n        }\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    const observer = new IntersectionObserver(this.handleScrollAnimations, {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.3, // Adjust this threshold as needed\r\n    });\r\n\r\n    const section1 = this.$refs.section1;\r\n    const section2 = this.$refs.section2;\r\n\r\n    observer.observe(section1);\r\n    observer.observe(section2);\r\n\r\n    // Add touch event listeners\r\n    section1.addEventListener('touchstart', () => {\r\n      section1.classList.add('visible');\r\n    });\r\n    section2.addEventListener('touchstart', () => {\r\n      section2.classList.add('visible');\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    @import '../assets/styles.css';\r\n\r\n    section.hidden {\r\n        opacity: 0;\r\n        filter: blur(5px);\r\n        transform: translateX(-100%);\r\n        transition: all 1s;\r\n    }\r\n\r\n    section.visible {\r\n        opacity: 1;\r\n        filter: blur(0);\r\n        transform: translateX(0);\r\n    }\r\n\r\n    .footer {\r\n        background-color: transparent;\r\n        padding: 20px;\r\n        text-align: center;\r\n    }\r\n\r\n    .footer-logo {\r\n        width: 50px;\r\n        height: 50px;\r\n    }\r\n\r\n    .footer p {\r\n        margin: 0;\r\n    }\r\n\r\n\r\n</style>\r\n"],"mappings":"AA0EA,OAAOA,MAAK,MAAO,0BAA0B;AAC7C,OAAOC,MAAK,MAAO,yBAAyB;AAE5C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,aAAa,EAAE,mBAAmB;MAClCC,aAAa,EAAE,qEAAqE;MACpFC,cAAc,EAAEN,MAAM;MACtBO,aAAa,EAAE,+CAA+C;MAC9DC,cAAc,EAAEP,MAAM;MACtBQ,aAAa,EAAE,2CAA2C;MAC1DC,aAAa,EAAE,yBAAyB;MACxCC,aAAa,EAAE,+DAA+D;MAC9EC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;IAAA,CACD;IACDC,sBAAsBA,CAACC,OAAO,EAAE;MAC9BA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAa,IAAKD,KAAK,CAACE,iBAAgB,GAAI,CAAC,EAAE;UACvDF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;QACvC,OAAO;UACLL,KAAK,CAACG,MAAM,CAACC,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;QAC1C;MACF,CAAC,CAAC;IACJ;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,QAAO,GAAI,IAAIC,oBAAoB,CAAC,IAAI,CAACZ,sBAAsB,EAAE;MACrEa,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,KAAK;MACjBC,SAAS,EAAE,GAAG,CAAE;IAClB,CAAC,CAAC;;IAEF,MAAMC,QAAO,GAAI,IAAI,CAACC,KAAK,CAACD,QAAQ;IACpC,MAAME,QAAO,GAAI,IAAI,CAACD,KAAK,CAACC,QAAQ;IAEpCP,QAAQ,CAACQ,OAAO,CAACH,QAAQ,CAAC;IAC1BL,QAAQ,CAACQ,OAAO,CAACD,QAAQ,CAAC;;IAE1B;IACAF,QAAQ,CAACI,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAC5CJ,QAAQ,CAACT,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IACnC,CAAC,CAAC;IACFU,QAAQ,CAACE,gBAAgB,CAAC,YAAY,EAAE,MAAM;MAC5CF,QAAQ,CAACX,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;IACnC,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}