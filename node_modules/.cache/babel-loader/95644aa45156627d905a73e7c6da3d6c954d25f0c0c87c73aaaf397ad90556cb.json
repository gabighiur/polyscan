{"ast":null,"code":"import NavBar from \"@/components/NavBar.vue\";\nimport CardComponent from \"@/components/CardComponent.vue\";\nimport vid from \"@/assets/logoanimation.mp4\";\nimport LogoNav from \"@/assets/logo2.png\";\nimport FLogo from \"@/assets/logoovo.png\";\nimport icon from \"@/assets/logo.png\";\nimport rage from \"@/assets/jaluzele/rageEmote.png\";\nimport CustomListItem from \"@/components/CustomListItem.vue\";\nexport default {\n  name: \"App\",\n  components: {\n    NavBar,\n    CardComponent,\n    CustomListItem\n  },\n  data() {\n    return {\n      LogoNav: LogoNav,\n      FLogo: FLogo,\n      vid: vid,\n      icon: icon,\n      rage: rage,\n      headerText: \"Hi!\\nI'm PolygonScan\\nScrapper Bot\",\n      coffee: \"Subscription Package\",\n      coffeeImg: \"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=&slug=bezmir&button_colour=FFDD00&font_colour=000000&font_family=Poppins&outline_colour=000000&coffee_colour=ffffff\",\n      coffeeLink: \"https://www.buymeacoffee.com/bezmir\",\n      headerContentItems: [\"Access all commands\", \"TA signal for trading\", \"Volume and Current Price\", \"VOL, EMA, MACD, RSI, ADX and BB\", \"Chart with 4 subplots included\", \"Sending signal every hour\", \"88% accurate\", \"Only 100 spots\", \"50$/monthly or 280$ annual payment\"],\n      section1Title: \"Discover the Exclusive Features\",\n      section1Texts: [\"Effortlessly monitor the value of your Ethereum and Polygon tokens.\", \"Set customized price alerts to stay informed.\", \"Stay updated on the latest market trends.\", \"Gwei Monitoring\", \"Sending crypto signals as TA indicators such as MACD, RSI, BB and more\"],\n      section2Title: \"How to use my services?\",\n      section2Items: [{\n        text: \"Invite me to your Discord server and unlock a world of possibilities.\",\n        link: \"https://discord.com/api/oauth2/authorize?client_id=1041454438595965049&permissions=2147534848&scope=bot%20applications.commands\"\n      }, {\n        text: \"Utilize the ps- prefix for commands. For example, try ps-help\",\n        link: null\n      }, {\n        text: \"Enjoy the PolygonScan Scrapper features and consider supporting it by voting.\",\n        link: null\n      }],\n      botDescription: \"I can access blockchain data, monitor wallets, and receive real-time alerts. Upgrade for advanced features like exporting data, increased transaction limits and receive Crypto Signals for daily trading.\"\n    };\n  },\n  mounted() {\n    // Scroll animations\n    const observer = new IntersectionObserver(this.handleScrollAnimations, {\n      root: null,\n      rootMargin: this.rootMargin,\n      threshold: this.threshold\n    });\n    const section0 = this.$refs.section0;\n    const section1 = this.$refs.section1;\n    const section2 = this.$refs.section2;\n    observer.observe(section0);\n    observer.observe(section1);\n    observer.observe(section2);\n\n    // Typewriter effect\n    const headerText = document.getElementById(\"typewriter\");\n    const text = headerText.textContent;\n    headerText.textContent = \" \";\n    let i = 0;\n    const typeSpeed = 100; // Speed of typewriter effect (in milliseconds)\n\n    const type = () => {\n      if (i < text.length) {\n        if (text.charAt(i) === \" \") {\n          headerText.innerHTML += \"&nbsp;\"; // Add a non-breaking space for actual spaces\n        } else {\n          headerText.innerText += text.charAt(i);\n        }\n        i++;\n        setTimeout(type, typeSpeed);\n      }\n    };\n    type();\n  },\n  methods: {\n    handleScrollAnimations(entries) {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.style.opacity = 1;\n        } else {\n          entry.target.style.opacity = 0;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["NavBar","CardComponent","vid","LogoNav","FLogo","icon","rage","CustomListItem","name","components","data","headerText","coffee","coffeeImg","coffeeLink","headerContentItems","section1Title","section1Texts","section2Title","section2Items","text","link","botDescription","mounted","observer","IntersectionObserver","handleScrollAnimations","root","rootMargin","threshold","section0","$refs","section1","section2","observe","document","getElementById","textContent","i","typeSpeed","type","length","charAt","innerHTML","innerText","setTimeout","methods","entries","forEach","entry","isIntersecting","target","style","opacity"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\PolygonScanner.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n        <NavBar />\r\n        <header>\r\n            <div class=\"video-container\">\r\n                <video class=\"header-video\" :src=\"vid\" autoplay loop muted></video>\r\n            </div>\r\n            <div class=\"header-text\">\r\n                <span id=\"typewriter\">{{ headerText }}</span>\r\n            </div> \r\n        </header> \r\n\r\n        <section class=\"hidden\" ref=\"section0\">\r\n            <div class=\"container\">\r\n                <h1> PolygonScan Scrapper</h1>\r\n                <p id=\"botdesc\">{{ botDescription }}</p>\r\n            </div>\r\n        </section>\r\n\r\n        <section class=\"hidden\" ref=\"section1\">\r\n            <div class=\"container\">\r\n                <h2>{{ section1Title }}</h2>\r\n                <div>\r\n                    <CustomListItem v-for=\"(text, index) in section1Texts\" :key=\"index\" :text=\"text\" :icon=\"icon\" />\r\n                </div>\r\n            </div>\r\n        </section>\r\n        \r\n        <section class=\"hidden\" ref=\"section2\">\r\n            <div class=\"container\">\r\n                <h2>{{ section2Title }}</h2>\r\n                <div>\r\n                    <CustomListItem \r\n                        v-for=\"(item, index) in section2Items\" \r\n                        :key=\"index\" \r\n                        :text=\"item.text\" \r\n                        :icon=\"icon\"\r\n                        :link=\"item.link\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n        <section class=\"header-content\">\r\n            <div class=\"info-container\">\r\n                <img :src=\"rage\" alt=\"rage\" />\r\n            </div>\r\n            <h2>{{ coffee }}</h2> \r\n            <ul>\r\n                <li v-for=\"(item, index) in headerContentItems\" :key=\"index\">{{ item }}</li> \r\n            </ul> \r\n            <a :href=\"coffeeLink\"><img :src=\"coffeeImg\" /></a>\r\n        </section>\r\n\r\n        <CardComponent />\r\n\r\n        <footer class=\"footer\">\r\n            <div class=\"footer-content\">\r\n                <img class=\"footer-logo\" :src=\"FLogo\" alt=\"Logo\" />\r\n                <p>Powered By <a href=\"https://ovoono.studio/\" target=\"_blank\">OvoOno Studio</a></p>\r\n            </div>\r\n        </footer>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import NavBar from \"@/components/NavBar.vue\";\r\n    import CardComponent from \"@/components/CardComponent.vue\";\r\n    import vid from \"@/assets/logoanimation.mp4\";\r\n    import LogoNav from \"@/assets/logo2.png\";\r\n    import FLogo from \"@/assets/logoovo.png\";\r\n    import icon from \"@/assets/logo.png\";\r\n    import rage from \"@/assets/jaluzele/rageEmote.png\"; \r\n    import CustomListItem from \"@/components/CustomListItem.vue\";\r\n\r\n    export default {\r\n        name: \"App\",\r\n        components: {\r\n            NavBar,\r\n            CardComponent,\r\n            CustomListItem\r\n        },\r\n        data() {\r\n            return {\r\n                LogoNav: LogoNav,\r\n                FLogo: FLogo,\r\n                vid: vid,\r\n                icon: icon,\r\n                rage: rage, \r\n                headerText: \"Hi!\\nI'm PolygonScan\\nScrapper Bot\",\r\n                coffee: \"Subscription Package\",\r\n                coffeeImg: \"https://img.buymeacoffee.com/button-api/?text=Buy me a coffee&emoji=&slug=bezmir&button_colour=FFDD00&font_colour=000000&font_family=Poppins&outline_colour=000000&coffee_colour=ffffff\",\r\n                coffeeLink: \"https://www.buymeacoffee.com/bezmir\",\r\n                headerContentItems: [\r\n                    \"Access all commands\",\r\n                    \"TA signal for trading\",\r\n                    \"Volume and Current Price\",\r\n                    \"VOL, EMA, MACD, RSI, ADX and BB\",\r\n                    \"Chart with 4 subplots included\",\r\n                    \"Sending signal every hour\",\r\n                    \"88% accurate\",\r\n                    \"Only 100 spots\",\r\n                    \"50$/monthly or 280$ annual payment\",\r\n                ],\r\n                section1Title: \"Discover the Exclusive Features\",\r\n                section1Texts: [\r\n                    \"Effortlessly monitor the value of your Ethereum and Polygon tokens.\",\r\n                    \"Set customized price alerts to stay informed.\",\r\n                    \"Stay updated on the latest market trends.\",\r\n                    \"Gwei Monitoring\",\r\n                    \"Sending crypto signals as TA indicators such as MACD, RSI, BB and more\",\r\n                ],\r\n                section2Title: \"How to use my services?\",\r\n                section2Items: [\r\n                    {\r\n                        text: \"Invite me to your Discord server and unlock a world of possibilities.\",\r\n                        link: \"https://discord.com/api/oauth2/authorize?client_id=1041454438595965049&permissions=2147534848&scope=bot%20applications.commands\"\r\n                    },\r\n                    {\r\n                        text: \"Utilize the ps- prefix for commands. For example, try ps-help\",\r\n                        link: null\r\n                    },\r\n                    {\r\n                        text: \"Enjoy the PolygonScan Scrapper features and consider supporting it by voting.\",\r\n                        link: null\r\n                    },\r\n                ],\r\n                botDescription: \"I can access blockchain data, monitor wallets, and receive real-time alerts. Upgrade for advanced features like exporting data, increased transaction limits and receive Crypto Signals for daily trading.\",\r\n            };\r\n        },\r\n     \r\n        mounted() {\r\n            // Scroll animations\r\n            const observer = new IntersectionObserver(this.handleScrollAnimations, {\r\n                root: null,\r\n                rootMargin: this.rootMargin,\r\n                threshold: this.threshold,\r\n            });\r\n\r\n            const section0 = this.$refs.section0;\r\n            const section1 = this.$refs.section1;\r\n            const section2 = this.$refs.section2; \r\n\r\n            observer.observe(section0);\r\n            observer.observe(section1);\r\n            observer.observe(section2); \r\n\r\n            // Typewriter effect\r\n            const headerText = document.getElementById(\"typewriter\");\r\n            const text = headerText.textContent;\r\n            headerText.textContent = \" \";\r\n\r\n            let i = 0;\r\n            const typeSpeed = 100; // Speed of typewriter effect (in milliseconds)\r\n\r\n            const type = () => {\r\n                if (i < text.length) {\r\n                    if (text.charAt(i) === \" \") {\r\n                        headerText.innerHTML += \"&nbsp;\"; // Add a non-breaking space for actual spaces\r\n                    } else {\r\n                        headerText.innerText += text.charAt(i);\r\n                    }\r\n                    i++;\r\n                    setTimeout(type, typeSpeed);\r\n                }\r\n            };\r\n\r\n            type();\r\n        },\r\n        methods: {\r\n            handleScrollAnimations(entries) {\r\n                entries.forEach((entry) => {\r\n                    if (entry.isIntersecting) {\r\n                        entry.target.style.opacity = 1;\r\n                    } else {\r\n                        entry.target.style.opacity = 0;\r\n                    }\r\n                });\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    @import '../assets/styles.css'; \r\n   \r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}