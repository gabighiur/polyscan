{"ast":null,"code":"import { gsap } from 'gsap';\nexport default {\n  data() {\n    return {\n      showSlider: false,\n      sliderItems: [{\n        type: 'image',\n        src: require('@/assets/jaluzele/slider1.mp4')\n      }, {\n        type: 'video',\n        src: require('@/assets/jaluzele/slider2.mp4'),\n        loop: true\n      }, {\n        type: 'video',\n        src: require('@/assets/jaluzele/slider3.png'),\n        loop: true\n      }]\n    };\n  },\n  methods: {\n    playSlider() {\n      this.showSlider = true;\n      const sliderDuration = 10; // Duration of each slide in seconds\n\n      let timeline = gsap.timeline({\n        repeat: -1,\n        repeatDelay: sliderDuration\n      });\n      this.sliderItems.forEach(item => {\n        let animation;\n        if (item.type === 'image') {\n          animation = gsap.to('.slider-image', {\n            opacity: 1,\n            duration: sliderDuration\n          });\n        } else if (item.type === 'video') {\n          const videoElement = document.querySelector('.slider-video');\n          animation = gsap.fromTo(videoElement, {\n            opacity: 1\n          }, {\n            opacity: 1,\n            duration: sliderDuration,\n            onStart: () => {\n              videoElement.play();\n            },\n            onComplete: () => {\n              videoElement.pause();\n              videoElement.currentTime = 0;\n            }\n          });\n        }\n        timeline.add(animation);\n      });\n    }\n  },\n  mounted() {\n    this.playSlider();\n  }\n};","map":{"version":3,"names":["gsap","data","showSlider","sliderItems","type","src","require","loop","methods","playSlider","sliderDuration","timeline","repeat","repeatDelay","forEach","item","animation","to","opacity","duration","videoElement","document","querySelector","fromTo","onStart","play","onComplete","pause","currentTime","add","mounted"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\SliderComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"slider\">\r\n        <div class=\"slider-container\" v-show=\"showSlider\">\r\n            <div class=\"slider-item\" v-for=\"(item, index) in sliderItems\" :key=\"index\">\r\n                <img v-if=\"item.type === 'image'\" :src=\"item.src\" class=\"slider-image\" alt=\"Slider Image\" />\r\n                <video v-else-if=\"item.type === 'video'\" :src=\"item.src\" class=\"slider-video\" loop></video>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { gsap } from 'gsap';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                showSlider: false,\r\n                sliderItems: [\r\n                    {\r\n                        type: 'image',\r\n                        src: require('@/assets/jaluzele/slider1.mp4'),\r\n                    },\r\n                    {\r\n                        type: 'video',\r\n                        src: require('@/assets/jaluzele/slider2.mp4'),\r\n                        loop: true,\r\n                    },\r\n                    {\r\n                        type: 'video',\r\n                        src: require('@/assets/jaluzele/slider3.png'),\r\n                        loop: true,\r\n                    },\r\n                ],\r\n            };\r\n        },\r\n  methods: {\r\n    playSlider() {\r\n      this.showSlider = true;\r\n      const sliderDuration = 10; // Duration of each slide in seconds\r\n\r\n      let timeline = gsap.timeline({ repeat: -1, repeatDelay: sliderDuration });\r\n\r\n      this.sliderItems.forEach((item) => {\r\n        let animation;\r\n\r\n        if (item.type === 'image') {\r\n          animation = gsap.to('.slider-image', { opacity: 1, duration: sliderDuration });\r\n        } else if (item.type === 'video') {\r\n          const videoElement = document.querySelector('.slider-video');\r\n\r\n          animation = gsap.fromTo(\r\n            videoElement,\r\n            { opacity: 1 },\r\n            {\r\n              opacity: 1,\r\n              duration: sliderDuration,\r\n              onStart: () => {\r\n                videoElement.play();\r\n              },\r\n              onComplete: () => {\r\n                videoElement.pause();\r\n                videoElement.currentTime = 0;\r\n              },\r\n            }\r\n          );\r\n        }\r\n\r\n        timeline.add(animation);\r\n      });\r\n    },\r\n  },\r\n  mounted() {\r\n    this.playSlider();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n    .slider {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .slider-container {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 100%;\r\n        overflow: hidden;\r\n    }\r\n\r\n    .slider-item {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        opacity: 0;\r\n    }\r\n\r\n    .slider-image,\r\n    .slider-video {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n    }\r\n</style>\r\n"],"mappings":"AAYA,SAASA,IAAG,QAAS,MAAM;AAEvB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,CACT;QACIC,IAAI,EAAE,OAAO;QACbC,GAAG,EAAEC,OAAO,CAAC,+BAA+B;MAChD,CAAC,EACD;QACIF,IAAI,EAAE,OAAO;QACbC,GAAG,EAAEC,OAAO,CAAC,+BAA+B,CAAC;QAC7CC,IAAI,EAAE;MACV,CAAC,EACD;QACIH,IAAI,EAAE,OAAO;QACbC,GAAG,EAAEC,OAAO,CAAC,+BAA+B,CAAC;QAC7CC,IAAI,EAAE;MACV,CAAC;IAET,CAAC;EACL,CAAC;EACPC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACP,UAAS,GAAI,IAAI;MACtB,MAAMQ,cAAa,GAAI,EAAE,EAAE;;MAE3B,IAAIC,QAAO,GAAIX,IAAI,CAACW,QAAQ,CAAC;QAAEC,MAAM,EAAE,CAAC,CAAC;QAAEC,WAAW,EAAEH;MAAe,CAAC,CAAC;MAEzE,IAAI,CAACP,WAAW,CAACW,OAAO,CAAEC,IAAI,IAAK;QACjC,IAAIC,SAAS;QAEb,IAAID,IAAI,CAACX,IAAG,KAAM,OAAO,EAAE;UACzBY,SAAQ,GAAIhB,IAAI,CAACiB,EAAE,CAAC,eAAe,EAAE;YAAEC,OAAO,EAAE,CAAC;YAAEC,QAAQ,EAAET;UAAe,CAAC,CAAC;QAChF,OAAO,IAAIK,IAAI,CAACX,IAAG,KAAM,OAAO,EAAE;UAChC,MAAMgB,YAAW,GAAIC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;UAE5DN,SAAQ,GAAIhB,IAAI,CAACuB,MAAM,CACrBH,YAAY,EACZ;YAAEF,OAAO,EAAE;UAAE,CAAC,EACd;YACEA,OAAO,EAAE,CAAC;YACVC,QAAQ,EAAET,cAAc;YACxBc,OAAO,EAAEA,CAAA,KAAM;cACbJ,YAAY,CAACK,IAAI,CAAC,CAAC;YACrB,CAAC;YACDC,UAAU,EAAEA,CAAA,KAAM;cAChBN,YAAY,CAACO,KAAK,CAAC,CAAC;cACpBP,YAAY,CAACQ,WAAU,GAAI,CAAC;YAC9B;UACF,CACF,CAAC;QACH;QAEAjB,QAAQ,CAACkB,GAAG,CAACb,SAAS,CAAC;MACzB,CAAC,CAAC;IACJ;EACF,CAAC;EACDc,OAAOA,CAAA,EAAG;IACR,IAAI,CAACrB,UAAU,CAAC,CAAC;EACnB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}