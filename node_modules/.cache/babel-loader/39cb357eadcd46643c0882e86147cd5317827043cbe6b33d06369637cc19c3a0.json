{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-18218d1c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"slider-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"stage\"\n};\nconst _hoisted_3 = {\n  class: \"container\"\n};\nconst _hoisted_4 = {\n  class: \"ring\"\n};\nconst _hoisted_5 = {\n  class: \"video\"\n};\nconst _hoisted_6 = {\n  ref: \"video\",\n  class: \"video-element\",\n  loop: \"\",\n  muted: \"\"\n};\nconst _hoisted_7 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"video\", _hoisted_6, [_createElementVNode(\"source\", {\n    src: $data.videoSrc,\n    type: \"video/mp4\"\n  }, null, 8 /* PROPS */, _hoisted_7)], 512 /* NEED_PATCH */)])])])])]);\n}","map":{"version":3,"names":["class","ref","loop","muted","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","src","$data","videoSrc","type"],"sources":["C:\\D\\Vue\\polyscan\\src\\components\\SliderComponent.vue"],"sourcesContent":["<template>\r\n    <div class=\"slider-wrapper\">\r\n        <div class=\"stage\">\r\n            <div class=\"container\">\r\n                <div class=\"ring\">\r\n                    <div class=\"video\">\r\n                        <video ref=\"video\" class=\"video-element\" loop muted>\r\n                            <source :src=\"videoSrc\" type=\"video/mp4\">\r\n                        </video>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import gsap from 'gsap';\r\n    import $ from 'jquery';\r\n    import videoSrc from '@/assets/jaluzele/SliderPrice.mp4';\r\n\r\n    export default {\r\n        data() {\r\n            return {\r\n                videoSrc: videoSrc, // Replace with your video URL\r\n            };\r\n        },\r\n        mounted() {\r\n            const videoElement = this.$refs.video;\r\n\r\n            gsap.timeline()\r\n                .set('.ring', { rotationY: 180, cursor: 'grab' })\r\n                .set('.video', {\r\n                    rotateY: (i) => i * -36,\r\n                    transformOrigin: '50% 50% 500px',\r\n                    z: -500,\r\n                    backfaceVisibility: 'hidden',\r\n                })\r\n                .from('.video', {\r\n                    duration: 1.5,\r\n                    y: 200,\r\n                    opacity: 0,\r\n                    stagger: 0.1,\r\n                    ease: 'expo',\r\n                    onComplete: () => {\r\n                        videoElement.play();\r\n                    }\r\n                })\r\n                .add(() => {\r\n                    $('.video').on('mouseenter', (e) => {\r\n                        let current = e.currentTarget;\r\n                        gsap.to('.video', { opacity: (i, t) => (t == current) ? 1 : 0.5, ease: 'power3' });\r\n                    });\r\n                    $('.video').on('mouseleave', () => {\r\n                        gsap.to('.video', { opacity: 1, ease: 'power2.inOut' });\r\n                    });\r\n                }, '-=0.5');\r\n\r\n            $(window).on('mousedown touchstart', this.dragStart);\r\n            $(window).on('mouseup touchend', this.dragEnd);\r\n        },\r\n        methods: {\r\n            dragStart(e) {\r\n                if (e.touches) e.clientX = e.touches[0].clientX;\r\n                this.xPos = Math.round(e.clientX);\r\n                gsap.set('.ring', { cursor: 'grabbing' });\r\n                $(window).on('mousemove touchmove', this.drag);\r\n            },\r\n            drag(e) {\r\n                if (e.touches) e.clientX = e.touches[0].clientX;\r\n\r\n                gsap.to('.ring', {\r\n                    rotationY: `-=${(Math.round(e.clientX) - this.xPos) % 360}`,\r\n                    onUpdate: () => { gsap.set('.video', { backgroundPosition: (i) => this.getBgPos(i) }); },\r\n                });\r\n\r\n                this.xPos = Math.round(e.clientX);\r\n            },\r\n            dragEnd() {\r\n                $(window).off('mousemove touchmove', this.drag);\r\n                gsap.set('.ring', { cursor: 'grab' });\r\n            },\r\n            getBgPos(i) {\r\n                return `${(100 - gsap.utils.wrap(0, 360, gsap.getProperty('.ring', 'rotationY') - 180 - i * 36) / 360 * 500)}px 0px`;\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .slider-wrapper {\r\n        position: relative;\r\n        width: 100%;\r\n        height: 400px; /* Adjust the height as desired */\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .stage {\r\n        width: 100%;\r\n        height: 100%;\r\n        transform-style: preserve-3d;\r\n        user-select: none;\r\n    }\r\n\r\n    .container {\r\n        perspective: 2000px;\r\n        width: 500px; /* Adjust the width as desired */\r\n        height: 300px; /* Adjust the height as desired */\r\n    }\r\n\r\n    .ring {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n\r\n    .video {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        transform-style: preserve-3d;\r\n        backface-visibility: hidden;\r\n    }\r\n\r\n        .video .video-element {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAgB;;EAClBA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAM;;EACRA,KAAK,EAAC;AAAO;;EACPC,GAAG,EAAC,OAAO;EAACD,KAAK,EAAC,eAAe;EAACE,IAAI,EAAJ,EAAI;EAACC,KAAK,EAAL;;;;uBALlEC,mBAAA,CAYM,OAZNC,UAYM,GAXFC,mBAAA,CAUM,OAVNC,UAUM,GATFD,mBAAA,CAQM,OARNE,UAQM,GAPFF,mBAAA,CAMM,OANNG,UAMM,GALFH,mBAAA,CAIM,OAJNI,UAIM,GAHFJ,mBAAA,CAEQ,SAFRK,UAEQ,GADJL,mBAAA,CAAyC;IAAhCM,GAAG,EAAEC,KAAA,CAAAC,QAAQ;IAAEC,IAAI,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}